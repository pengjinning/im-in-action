
server.port=2884

# ===============================
# = DATA SOURCE
# ===============================

# mysql 8
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/bytedesk_maven?serverTimezone=GMT%2B8&useUnicode=true&autoReconnect=true&characterEncoding=utf8&useSSL=true
# mysql 5.7
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/bytedesk?autoReconnect=true&characterEncoding=utf8&useSSL=true&serverTimezone=GMT%2B8
spring.datasource.username=root
spring.datasource.password=C8aJEVCCvSA1VFi8
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1
# Initialize the datasource with available DDL and DML scripts
#spring.datasource.initialization-mode=always


# ===============================
# = REDIS (RedisProperties)
# ===============================
# Spring Boot自带缓存
# redis缓存
spring.cache.type=Redis
# 选择数据库
spring.redis.database=4
# Redis服务器地址
spring.redis.host=127.0.0.1
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=C8aJEVCCvSA1VFi8
# 连接池最大连接数（使用负值表示没有限制）
#spring.redis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
#spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
#spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
#spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
#spring.redis.timeout=0


## ===============================
## = kafka
## ===============================
## 指定kafka 代理地址，可以多个
#spring.kafka.bootstrap-servers=127.0.0.1:9092
##=============== provider  =======================
#spring.kafka.producer.retries=0
## 每次批量发送消息的数量
#spring.kafka.producer.batch-size=16384
#spring.kafka.producer.buffer-memory=33554432
## 指定消息key和消息体的编解码方式
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
##=============== consumer  =======================
## 指定默认消费者group id
#spring.kafka.consumer.group-id=test-consumer-group
#spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.enable-auto-commit=true
#spring.kafka.consumer.auto-commit-interval=100
## 指定消息key和消息体的编解码方式
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer


# ===============================
# = mars
# ===============================
# Enable/disable mars transport protocol.
mars.enabled=true
mars.bind_address=0.0.0.0
mars.bind_port=3784
mars.adaptor=JsonMqttAdaptor
mars.timeout=10000

# DISABLE/SIMPLE/ADVANCED/ADVANCED
mars.netty.leak_detector_level=SIMPLE
mars.netty.parent_event_loop_group_thread_count=1
mars.netty.child_event_loop_group_thread_count=8
mars.netty.max_payload_size=1024


# ===============================
# = Rabbitmq
# = https://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html#common-application-properties
# ===============================
# RabbitMQ集群，addresses一定要逗号分隔
# spring.rabbitmq.addresses= # Comma-separated list of addresses to which the client should connect.
# spring.rabbitmq.addresses=ip1:port1,ip2:port2,ip3:port3

# 开发环境
#spring.rabbitmq.host=127.0.0.1
#spring.rabbitmq.port=5672
##spring.rabbitmq.addresses=127.0.0.1:5672
#spring.rabbitmq.username=bytedesk
#spring.rabbitmq.password=C8aJEVCCvSA1VFi976
#spring.rabbitmq.stomp.port=61613
#spring.rabbitmq.stomp.login=stomp_web
#spring.rabbitmq.stomp.passcode=stomp_web
# 集群
#spring.rabbitmq.addresses=127.0.0.1:5672,127.0.0.2:5672,127.0.0.3:5672


# ===============================
# = spring-boot-actuator
# ===============================
management.endpoints.web.exposure.include=*



